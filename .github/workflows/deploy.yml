name: Deploy to AWS Fargate
 
on:
  push:
    branches: [ main ]
    
# ADD THIS PERMISSIONS SECTION
permissions:
  contents: read
  packages: write  # This is the missing permission!
 
env:
  AWS_REGION: us-east-1
  ECS_SERVICE: dagster-service
  ECS_CLUSTER: dagster-cluster
  ECS_TASK_DEFINITION: dagster-task
  CONTAINER_NAME: dagster-container
 
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
 
    steps:
    - name: Checkout
      uses: actions/checkout@v4
 
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
 
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
 
    - name: Build, tag, and push image to GitHub Container Registry
      env:
        REGISTRY: ghcr.io
        REPOSITORY: ${{ github.repository }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker build -t $REGISTRY/$REPOSITORY:latest .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
        docker push $REGISTRY/$REPOSITORY:latest
 
    - name: Download task definition
      run: |
        aws ecs describe-task-definition --task-definition $ECS_TASK_DEFINITION --query taskDefinition > task-definition.json
 
    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: ${{ env.CONTAINER_NAME }}
        image: ghcr.io/${{ github.repository }}:${{ github.sha }}
 
    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true
